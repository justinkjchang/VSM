package com.juuhhhstin.StockData;

import java.io.IOException;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;
import java.util.concurrent.TimeoutException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

public class StockInfo {
	

class downloadThread implements Runnable{
	Thread t;
	String stockSymbol;
	
	downloadThread(String symbol){
		this.stockSymbol = symbol;
		// create new, second thread
		t = new Thread(this, "Data retrieval thread");
		System.out.println("Retrieving data for: " + t + ": " + stockSymbol);
		t.start(); // start thread
	}
	
	// entry point for second thread
	public void run() {
		
		String url  = "http://finance.yahoo.com/q?s=" + stockSymbol; // set string to URL
		
		try {
			Document document = Jsoup.connect(url).get(); //using Jsoup to connect and parse URL
			String text = document.toString(); // convert Jsoup document to string
			
			int from = text.indexOf("yfs_l84", 0); // look for yfs_l84 and start index there to read price
			int to = text.indexOf("</span></span>", from);
			String price = text.substring(from + 10 + stockSymbol.length(), to); // get price substring
			price = price.replace(",",""); // remove commas in price values
			System.out.println(stockSymbol + ": " + Double.parseDouble(price));
		} catch (IOException e) {
			System.out.println("Data retrieval interrupted");
		}
		System.out.println("Data retrieval complete for " + stockSymbol);
	}
}
	
	public String getStockName(String symbol) throws Exception{
		
		String url  = "http://finance.yahoo.com/q?s=" + symbol; // set string to URL
		Document document = Jsoup.connect(url).get(); // use Jsoup to connect to url & convert to document
		String text = document.toString(); // convert document to string variable
		
		int p = text.indexOf("<title>", 0); // look for <title> and change to index
		int from = text.indexOf("Summary for ", p);
		int to   = text.indexOf("- Yahoo! Finance", from);
		String name = text.substring(from + 12, to);
		
		return name;
	}
	
	public void getCurrentPrice(String symbol) {
		try {
			new downloadThread(symbol);
		} catch (NumberFormatException e){
			System.out.println("Number format exception (Invalid symbol?) for " + symbol);
		} /*catch (TimeoutException ex){
			System.out.println("Timeout Exception for " + symbol);
		} catch (SocketTimeoutException STE){
			System.out.println("Socket Timeout Exception for " + symbol);
		} catch (UnknownHostException UHE){
		}*/
		//return Double.parseDouble(price); // return price converted to a double
	}
}
